!#/bin/bash bash
# A weather tool for your command line!

funky ()
{
    echo "printed statement;  how funky!!!!"
}

loadCFG () 
{
if [ -r /etc/chili-cli.cfg ]; then
    . /etc/chili-cli.cfg
        if [ -r ~/.chili-clirc ]; then
            . ~/.chili-clirc
        fi        
fi

if [ -r ~/.chili-clirc ]; then
    . ~/.chili-clirc
fi
}
cleanCFG () 
{
    cfgfile='/etc/chili-cli.cfg'
    cfgfile_secured='tmp/chili-cli.cfg'

    #cleans the config file to make it well-formed
    #this if-then block was made using information 
    #from wiki.bash-hackers.org/howto/conffile 
    if egrep -q -v '^#|^[^ ]*=[^;]*' "$cfgfile"; then
        echo "Config file is unclean, cleaning it..." >&2
        egrep '^#|^[^ ]*=[^;&]*' "$cfgfile" > "$cfgfile_secured"
        cfgfile="$cfgfile_secured" 
        source "$cfgfile"
    fi
}

#create a config file locally
initialize () 
{
    echo "Set IP for location (leave blank for default):"
    read setIP
    echo "$setIP"
    
    touch "$HOME/.chili-clirc"

    echo "IP=$setIP"

    . $HOME/.chili-clirc
    loadCFG
}
#initialize
#funky
loadCFG


URL="http://ip-api.com/json"
weatherInfo="conditions"
if [[ $# -eq 0 ]] ; then
    weatherInfo="conditions"
else
    while [[ $# > 0 ]]
    do
        param="$1"

        case $param in
            -ip|-IP)
                IP="$2"
                echo "parameter IP found ${IP}"
                URL="${URL}/${IP}"
                #curl "http://ip-api.com/json/$IP"
                ;;
            -hourly)
                weatherInfo="hourly"
                ;;
            -forecast)
                weatherInfo="forecast"
                ;;
            -current|-now)
                weatherInfo="conditions"
                ;;            
            -init)
                initialize
                ;;
        esac
        shift
    done
fi

location=$(curl -sS "$URL")
#Regex parsing of json
#city=$(echo $location | grep -Po '"city":.*?[^\\]",')
#region=$(echo $location | grep -Po '"region":.*?[^\\]",')

city=$(echo $location | jq -r '.city' | sed -e 's/ /_/g')
region=$(echo $location | jq -r '.region')

printf "Retrieving weather data for ${city}, ${region}...\n"

apiKey=$(cat "$HOME/apikey")
wundergroundAPI="http://api.wunderground.com/api/${apiKey}/${weatherInfo}/q/${region}/${city}.json"
echo "$wundergroundAPI"
weatherJSON=$(curl -sS $wundergroundAPI)
#weatherJSON=$(cat /root/data.json)
temp=$(echo "${weatherJSON}" | jq -r '.current_observation' | jq -r '.temperature_string')
weather=$(echo "${weatherJSON}" | jq -r '.current_observation' | jq -r '.weather')

printf "   Temperature: ${temp} \n   Weather: ${weather}\n"

exit 0
